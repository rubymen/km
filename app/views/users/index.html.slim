- title 'Utilisateurs'
- description 'Utilisateurs du Knowledge Manager'
- set_meta_tags og: { title: 'Utilisateurs du Knowledge Manager', url: users_url }
- set_meta_tags keywords: keywords

- content_for :scripts do
  coffee:
    users = new Bloodhound(
      datumTokenizer: (d) ->
        d.tokens

      queryTokenizer: Bloodhound.tokenizers.whitespace
      remote: '/users/autocomplete?query=%QUERY'
    )

    users.initialize()

    $('#elastic_search').typeahead null,
      displayKey: 'lastname'
      source: users.ttAdapter()

    $('form.elastic input[type=checkbox]').change ->
      $('form.elastic').submit()

.row
  .col-md-12
    h1
      | Utilisateurs
      | &nbsp;
      small Tous les utilisateurs
    ol.breadcrumb
      li.active
        i.fa.fa-dashboard
        | Utilisateurs
.row
  .col-md-2
    - if can? :create, User.new
      = link_to 'Créer un utilisateur', new_user_path, class: 'btn btn-block btn-success'
    = simple_form_for :elastic, url: users_path, method: :get do |f|
      h3 Recherche
      .input-group
      = f.input :search, as: :string, input_html: { value: params[:elastic].try(:[], :search) }, label: false, class: 'form-control'
      .input-group
        = f.input :alphabetically, label: 'Alphabétique', as: :boolean, input_html: { checked: to_b(params[:elastic].try(:[], :alphabetically)) }
      .input-group
        h4 Type
        = f.input :member, label: 'Membre', as: :boolean, input_html: { checked: to_b(params[:elastic].try(:[], :member)) }
        = f.input :contributor, label: 'Contributeur', as: :boolean, input_html: { checked: to_b(params[:elastic].try(:[], :contributor)) }
        = f.input :administrator, label: 'Administrateur', as: :boolean, input_html: { checked: to_b(params[:elastic].try(:[], :administrator)) }
        = button_tag(type: 'submit', class: 'btn btn-block btn-default') do
          i.glyphicon.glyphicon-search
          '  Rechercher
        = link_to 'Supprimer les filtres', request.path, class: 'btn btn-block btn-danger'
  .col-md-10
    - @users.with_details.each do |user, details|
      .row.user-item
        .col-md-1
          = link_to(image_tag(user.avatar.thumb), user)
        .col-md-2
          h4.mtn
            = link_to raw(details[:highlight].try(:[], :name) || user.name), user
        .col-md-6
          blockquote
            = user.email
        .col-md-3
          = link_to 'Consulter l\'utilisateur', user, class: 'btn btn-default btn-block btn-lg'

      = will_paginate @users, renderer: BootstrapPagination::Rails, class: 'pagination pagination-centered'
